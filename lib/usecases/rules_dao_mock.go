// Code generated by MockGen. DO NOT EDIT.
// Source: tricky/lib/usecases (interfaces: IRulesDAO)

// Package usecases is a generated GoMock package.
package usecases

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	domain "tricky/lib/domain"
)

// MockIRulesDAO is a mock of IRulesDAO interface
type MockIRulesDAO struct {
	ctrl     *gomock.Controller
	recorder *MockIRulesDAOMockRecorder
}

// MockIRulesDAOMockRecorder is the mock recorder for MockIRulesDAO
type MockIRulesDAOMockRecorder struct {
	mock *MockIRulesDAO
}

// NewMockIRulesDAO creates a new mock instance
func NewMockIRulesDAO(ctrl *gomock.Controller) *MockIRulesDAO {
	mock := &MockIRulesDAO{ctrl: ctrl}
	mock.recorder = &MockIRulesDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIRulesDAO) EXPECT() *MockIRulesDAOMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockIRulesDAO) Add(arg0 *domain.RedirectionRule) error {
	ret := m.ctrl.Call(m, "Add", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add
func (mr *MockIRulesDAOMockRecorder) Add(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockIRulesDAO)(nil).Add), arg0)
}

// Delete mocks base method
func (m *MockIRulesDAO) Delete(arg0 string) (*domain.RedirectionRule, error) {
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(*domain.RedirectionRule)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete
func (mr *MockIRulesDAOMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIRulesDAO)(nil).Delete), arg0)
}

// GetAll mocks base method
func (m *MockIRulesDAO) GetAll() ([]*domain.RedirectionRule, error) {
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]*domain.RedirectionRule)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockIRulesDAOMockRecorder) GetAll() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIRulesDAO)(nil).GetAll))
}

// GetByKey mocks base method
func (m *MockIRulesDAO) GetByKey(arg0 string) (*domain.RedirectionRule, error) {
	ret := m.ctrl.Call(m, "GetByKey", arg0)
	ret0, _ := ret[0].(*domain.RedirectionRule)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByKey indicates an expected call of GetByKey
func (mr *MockIRulesDAOMockRecorder) GetByKey(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByKey", reflect.TypeOf((*MockIRulesDAO)(nil).GetByKey), arg0)
}
